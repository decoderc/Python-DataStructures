import string
def infixToPostfix(infixexpr):

 prec = {}
 prec["*"] = 3
 prec["/"] = 3
 prec["+"] = 2
 prec["-"] = 2
 prec["("] = 1

 opStack = Stack()
 postfixList = []

 tokenList = infixexpr.split()

 for token in tokenList:
   if token in string.uppercase:
     postfixList.append(token)
   elif token == '(':
     opStack.push(token)
   elif token == ')':
     topToken = opStack.pop()
     while topToken != '(':
       postfixList.append(topToken)
       topToken = opStack.pop()
   else:
    while (not opStack.isEmpty()) and \
      (prec[opStack.peek()] >= prec[token]):
        postfixList.append(opStack.pop())

    opStack.push(token)

 while not opStack.isEmpty():
    postfixList.append(opStack.pop())

 return string.join(postfixList)
